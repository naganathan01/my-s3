trigger:
  - main

variables:
  - name: TF_VAR_CREATE_BLACK
    value: $[variables.TF_VAR_CREATE_BLACK]
  - name: TF_VAR_CREATE_RED
    value: $[variables.TF_VAR_CREATE_RED]
  - name: TF_VAR_ELB_TARGET
    value: $[variables.TF_VAR_ELB_TARGET]
  - name: TF_VAR_WEB_AMI_BLACK
    value: $[variables.TF_VAR_WEB_AMI_BLACK]
  - name: TF_VAR_WEB_AMI_RED
    value: $[variables.TF_VAR_WEB_AMI_RED]

pool:
  name: Default

steps:
  - task: PowerShell@2
    displayName: 'Print Build Variables'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Running with variables:"
        Write-Host "TF_VAR_CREATE_BLACK: $(TF_VAR_CREATE_BLACK)"
        Write-Host "TF_VAR_CREATE_RED: $(TF_VAR_CREATE_RED)"
        Write-Host "TF_VAR_ELB_TARGET: $(TF_VAR_ELB_TARGET)"
        Write-Host "TF_VAR_WEB_AMI_BLACK: $(TF_VAR_WEB_AMI_BLACK)"
        Write-Host "TF_VAR_WEB_AMI_RED: $(TF_VAR_WEB_AMI_RED)"

  - task: PowerShell@2
    displayName: 'Build Process'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Starting build process..."
        
        # Example of using the variables in your build process
        if ([string]::IsNullOrEmpty("$(TF_VAR_CREATE_BLACK)")) {
          Write-Host "TF_VAR_CREATE_BLACK is not set"
        } else {
          Write-Host "TF_VAR_CREATE_BLACK is set to: $(TF_VAR_CREATE_BLACK)"
        }
        
        if ([string]::IsNullOrEmpty("$(TF_VAR_CREATE_RED)")) {
          Write-Host "TF_VAR_CREATE_RED is not set"
        } else {
          Write-Host "TF_VAR_CREATE_RED is set to: $(TF_VAR_CREATE_RED)"
        }